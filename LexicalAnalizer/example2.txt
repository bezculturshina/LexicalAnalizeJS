// Однострочный комментарий

/*
  Многострочный комментарий
  с описанием функции
*/

const PI = 3.14159;
let radius = 10;
var area;

// Функция вычисления площади круга
function calculateArea(r) {
  if (r <= 0) {
    // Некорректный радиус
    return null;
  }
  return PI * r * r; // Формула площади
}

// Использование шаблонных строк и интерполяции
let message = `Площадь круга с радиусом ${radius} равна ${calculateArea(radius)}.`;

// Логические операторы и условия
if (radius > 0 && radius < 100) {
  console.log(message);
} else if (radius >= 100) {
  console.warn("Радиус слишком большой!");
} else {
  console.error("Радиус должен быть положительным числом!");
}

// Цикл for с инкрементом
for (let i = 0; i < 5; i++) {
  console.log(`Итерация ${i + 1}`);
}

// Использование различных операторов
let x = 5;
x += 10;   // x = 15
x--;       // x = 14
let isEven = (x % 2 === 0) ? true : false;


// Использование try-catch-finally
try {
  throw new Error("Ошибка!");
} catch (e) {
  console.error(e.message);
} finally {
  console.log("Блок finally выполнен");
}

// Использование ключевых слов new, this, super
class Animal {
  constructor(name) {
    this.name = name;
  }
  speak() {
    console.log(`${this.name} издаёт звук.`);
  }
}

class Dog extends Animal {
  speak() {
    super.speak();
    console.log(`${this.name} лает.`);
  }
}

const dog = new Dog("Шарик");
dog.speak();

// Логические операторы, typeof, instanceof
console.log(typeof dog);           // "object"
console.log(dog instanceof Dog);   // true
console.log(dog instanceof Animal);// true

// Пример использования void
let unused = void 0;

// Тернарный оператор и логические выражения
let status = isEven ? "чётное" : "нечётное";
console.log(`Число ${x} является ${status}.`);

// Пример с null, undefined и булевыми значениями
let value = null;
let notDefined;
console.log(value === null);       // true
console.log(notDefined === undefined); // true
console.log(true && false);        // false

console.log(multiline);
